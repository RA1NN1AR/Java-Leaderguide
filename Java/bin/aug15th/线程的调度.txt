程序中的多个线程是并发执行的,线程若想被执行就必须得到CPU的使用权.

Java系统(虚拟机)会按照特定的机制为程序中的每个线程分配CPU的使用权.
这样的机制被称作线程的调度.

在计算机中,线程的调度有两种模型:

    分时调度模型:让所有的线程轮流获得CPU的使用权,并且平均分配每个线程占用的CPU时间段
    抢占式调度模型:让可运行池中优先级高的线程优先占用CPU,而对于优先级相同的线程,
                随机选择一个线程使其占用CPU,当它失去了CPU的使用权后,再随机选择其他线程获取CPU使用权.

在Java中,默认采用抢占式调度模型.
大多数情况下,程序员无需过多关心它,
但在某些特定的需求下需要改变这种模式,由程序自己来决定CPU的控制和调度.